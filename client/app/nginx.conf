worker_processes 1;
daemon off;

error_log <%= ENV["APP_ROOT"] %>/nginx/logs/error.log;
events { worker_connections 1024; }

http {
  log_format cloudfoundry '$http_x_forwarded_for - $http_referer - [$time_local]
 "$request" $status $body_bytes_sent';
  access_log <%= ENV["APP_ROOT"] %>/nginx/logs/access.log cloudfoundry;
  default_type application/octet-stream;
  include mime.types;
  types {
    application/json json;
  }
  sendfile on;
  gzip on;
  tcp_nopush on;
  keepalive_timeout 30;


  server {
    ssl off;
    port_in_redirect off;
    listen <%= ENV["PORT"] %>;
    server_name localhost;

    root <%= ENV["APP_ROOT"] %>/public;
    index index.html index.htm Default.htm;

    location ~ /\.ht { deny  all; }
    location / {
      # prerender
      try_files $uri /index.html @prerender;

      #sytax for adding custom header
      #add_header 'hugh custom header' 'this is my custom header2';

      #ensure user is going through https
      #if ($http_x_forwarded_proto != "https") {
      #  return 301 "https://${host}";
      #}
      #root <%= ENV["APP_ROOT"] %>/public;
      #index index.html index.htm Default.htm;
    }

    location @prerender {

        set $prerender 0;
        if ($http_user_agent ~* "intranetsearch-crawler|gsa-crawler|googlebot|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator") {
            set $prerender 1;
        }
        if ($args ~ "_escaped_fragment_") {
            set $prerender 1;
        }
        if ($http_user_agent ~ "Prerender") {
            set $prerender 0;
        }
        if ($uri ~ "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff)") {
            set $prerender 0;
        }

        if ($prerender = 1) {

            #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
            set $prerender "10.64.93.56:3000";
            rewrite .* /$scheme://$host$request_uri? break;
            proxy_pass http://$prerender;
        }
        if ($prerender = 0) {
            rewrite .* /index.html break;
        }
    }

    #uncomment lines below to setup reverse proxy
    #location /sap/ {
    #      proxy_pass <%= ENV["GW_HOST"] %>;
    #      #prevent user from being prompted for basic authentication
    #      proxy_hide_header www-authenticate;
    #}
  }
}
